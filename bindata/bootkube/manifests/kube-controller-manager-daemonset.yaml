apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    tier: "control-plane"
    k8s-app: "kube-controller-manager"
    openshift.io/control-plane: "true"
    openshift.io/component: "controller"
  annotations:
    openshift.io/run-level: "0"
spec:
  selector:
    matchLabels:
      tier: "control-plane"
      k8s-app: "kube-controller-manager"
      openshift.io/control-plane: "true"
      openshift.io/component: "controller"
  template:
    metadata:
      labels:
        tier: "control-plane"
        k8s-app: "kube-controller-manager"
        openshift.io/control-plane: "true"
        openshift.io/component: "controller"
    spec:
      containers:
      - name: kube-controller-manager
        image: {{ .Image }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - exec hyperkube kube-controller-manager --openshift-config=/etc/kubernetes/config/{{ .ConfigFileName }} --kubeconfig=/etc/kubernetes/secrets/kubeconfig --master=https://kubernetes.default.svc
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /etc/kubernetes/secrets
          name: secrets
          readOnly: true
        - mountPath: /etc/kubernetes/cloud
          name: etc-kubernetes-cloud
          readOnly: true
        - mountPath: /etc/kubernetes/config
          name: config
          readOnly: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
      - hostPath:
          path: {{ .SecretsHostPath }}
        name: secrets
      - hostPath:
          path: {{ .CloudProviderHostPath }}
        name: etc-kubernetes-cloud
      - hostPath:
          path: {{ .ConfigHostPath }}
        name: config
      - hostPath:
          path: /etc/ssl/certs
        name: ssl-certs-host
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
